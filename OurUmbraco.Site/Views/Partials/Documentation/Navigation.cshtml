@using OurUmbraco.Documentation
@inherits OurUmbraco.Our.Models.OurUmbracoTemplatePage
@{
    var docsUpdater = new DocumentationUpdater();
    var sitemap = docsUpdater.DocumentationSiteMap();
    const string root = "/documentation";
    var language = GetLanguage();
    if (!string.IsNullOrEmpty(language))
    {
        var languageDirectors = sitemap.Directories.FirstOrDefault(d => d.Level == 1 && d.Name.ToLower() == language);
        sitemap.Directories = languageDirectors.Directories;
    }
}

@functions
{
    public static string IsActive(string path, string classname = "active")
    {
        var requestSegments = HttpContext.Current.Request.Url.Segments.Skip(1);
        var itemSegments = path.Split(new[] { "/" }, StringSplitOptions.RemoveEmptyEntries);
        var counter = 0;
        foreach (var requestSegment in requestSegments.Take(itemSegments.Length))
        {
            var itemSegment = itemSegments[counter];
            if (requestSegment.TrimEnd("/").InvariantEquals(itemSegment))
            {
                counter += 1;
            }
        }

        return counter == itemSegments.Length ? classname : string.Empty;
    }
    public static string GetLanguage()
    {
        var rVal = string.Empty;
        var requestSegments = HttpContext.Current.Request.Url.Segments.Skip(1);
        if (requestSegments.Count() > 1)
        {
            var language = requestSegments.ElementAt(1).Trim("/").ToLower();
            if (language == "de")
            {
                rVal = language;
            }
        }
        return rVal;
    }
    public string RemoveNumberPrefix(string name)
    {
        var rVal = name;
        if (name.StartsWith("0") || name.StartsWith("1") || name.StartsWith("2"))
        {
            rVal = name.Substring(3);
        }
        return rVal;
    }
}


<nav>
    <div id="language">
        <a href="/documentation">EN</a> | <a href="/documentation/de">DE</a>
    </div>
    <details class="secondary_nav" open>
        <summary>Menu</summary>
        <ul class="level-1">

            @foreach (var item in sitemap.Directories)
            {
                if (item.Name != "Development Guidelines"
                    && item.Name != "Extending Umbraco"
                    && item.Name != "Using Umbraco"
                    && item.Name != "Installation"
                    && item.Name != "Products"
                    && item.Name != "Cheatsheets"
                    && item.Name != "DE"
                    && !item.Name.StartsWith("x "))
                {
                    <li class=" @IsActive(root+item.Path, "active open")">
                        <a href="@(root + item.Path)/"><h3>@RemoveNumberPrefix(item.Name)</h3></a>

                        @if (item.HasChildren)
                        {
                            <ul class="level-2 @IsActive(root + item.Path, "open")">
                                @foreach (var itemChild in item.Directories)
                                {
                                    <li class=" @IsActive(root + itemChild.Path, "active open")">
                                        <a href="@(root + itemChild.Path)/"><h4>@RemoveNumberPrefix(itemChild.Name)</h4></a>

                                        @if (itemChild.HasChildren)
                                        {
                                            <ul class="level-3 @IsActive(root + item.Path, "open")">
                                                @foreach (var itemGrandChild in itemChild.Directories)
                                                {
                                                    <li class=" @IsActive(root + itemGrandChild.Path, "active")"><a href="@(root + itemGrandChild.Path)/"><h5>@RemoveNumberPrefix(itemGrandChild.Name)</h5></a></li>
                                                }
                                            </ul>
                                        }
                                    </li>
                                }
                            </ul>
                        }
                    </li>
                }
            }
        </ul>
    </details>
</nav>

